/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods
#define HRML(k1,k2,k3,k4) &ht LSHIFT k1 &ht LALT k2 &ht LCTRL k3 &ht GUI k4
#define HRMR(k1,k2,k3,k4) &ht GUI k1 &ht LCTRL k2 &ht RALT k3 &ht RSHIFT k4

// Layers
#define Default 0
#define LOWER 1
#define RAISED 2
#define TRI 3

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };
        behaviors {
            ht: hold_tap {   
                label = "hold_tap";
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <220>;
                quick-tap-ms = <150>;
                global-quick-tap;
                bindings = <&kp>, <&kp>;
                };

         
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

                };


        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q      |  W      |  E       |  R      |  T   |     |  Z   |  U      |  I      |  O     |  P       |
// |  A SFT  |  S ALT  |  D CTRL  |  F GUI  |  G   |     |  H   |  J GUI  |  K CTRL |  L ALT |  ESC SFT |
// |  Y      |  X      |  C       |  V      |  B   |     |  N   |  M      |  ,      |  .     |  ?       |
//                     |  TAB     |  LWR    |  SPC |     |  ENT |  RSE    |  BSPC   |
                        bindings = <
    &kp Q    &kp W    &kp E     &kp R &kp T       &kp Y   &kp U    &kp I     &kp O   &kp P    
    HRML(A,  S,       D,        F)    &kp G       &kp H   HRMR(J, K,        L,       ESC)    
    &kp Z    &kp X    &kp C     &kp V &kp B       &kp N   &kp M    &kp COMMA &kp DOT &kp QMARK 
                      &kp TAB   &mo 1 &kp SPACE   &kp RET &mo 2 &kp BSPC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8    |  9  |  0  |
// | SFT |     |     |     |     |     |     | LFT | DWN   | UP  | RGT |
// | BT1 | BT2 | BT3 | BT4 | BT5 |     |  Ö  |  Ü  |  Ä    |  ß  |     |
//             | GUI |     | SPC |     | ENT |     | BSPC  |
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6          &kp N7            &kp N8           &kp N9      &kp N0 
   &trans       &trans       &trans       &trans       &trans           &trans          &kp LEFT          &kp DOWN         &kp UP      &kp RIGHT  
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp DE_O_UMLAUT &kp DE_U_UMLAUT   &kp DE_A_UMLAUT  &kp DE_SZ   &trans 
                             &kp LGUI     &trans       &kp SPACE        &kp RET         &trans            &kp BSPC
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  "   |  §  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =  |
// |     |      |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
// |     |      |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
//              | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp DE_EXCL &kp DE_DQT &kp DE_SECT &kp DLLR &kp DE_PRCNT   &kp DE_AMPS &kp DE_SLASH  &kp DE_LPAR &kp DE_RPAR &kp DE_EQUAL 
   &trans      &trans     &trans      &trans   &trans         &kp MINUS   &kp EQUAL     &kp LBKT    &kp RBKT    &kp BSLH 
   &trans      &trans     &trans      &trans   &trans         &kp UNDER   &kp PLUS      &kp LBRC    &kp RBRC    &kp PIPE 
                          &kp LGUI    &trans   &kp SPACE      &kp RET     &trans        &kp RALT
                        >;
                };

                Tri_layer {
// -----------------------------------------------------------------------------------------
// | F1  |  F2  |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 |  F11  |
// |     |      |     |     |     |   |     |     |     |     |       |
// | BT1 | BT2  | BT3 | BT4 | BT5 |   |     |     |     |     | BTCLR |
//              | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5           &kp F6     &kp F7      &kp F8      &kp F9   &kp F11 
   &trans       &trans       &trans       &trans       &trans           &trans      &trans     &trans      &trans   &trans
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &trans      &trans     &trans      &trans   &bt BT_CLR 
                             &kp LGUI     &trans        &kp SPACE       &kp RET     &trans     &kp RALT
                        >;
                };

        };
};
