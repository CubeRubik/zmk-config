/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods
#define HRML(k1,k2,k3,k4) &ht LEFT_GUI k1 &ht LALT k2 &ht LCTRL k3 &ht LSHIFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHIFT k1 &ht LCTRL k2 &ht RALT k3 &ht LEFT_GUI k4

// Layers
#define HRA     0
#define HRA_L   1
#define HRA_R   2
#define Combo   3
#define Layers  4
#define G0      5
#define G0_L    6
#define G1      7
#define LOL     8
#define LOL_L   9
#define CS      10
#define ER      11
#define ER_L    12
#define MR      13
#define MR_L    14
#define SUB     15
#define SPZ     16
#define SPZ_L   17

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };
        behaviors {
            ht: hold_tap {   
                label = "hold_tap";
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <220>;
                quick-tap-ms = <150>;
                global-quick-tap;
                bindings = <&kp>, <&kp>;
                };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        combo   {
            if-layers = <1 2>;
            then-layer = <3>;
                        };
                };
        };

        keymap {
                compatible = "zmk,keymap";

                Home_Row_Adenvture {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P   |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ESC |
// |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ?   |
//             | TAB | LWR | SPC |   | ENT | RSE  | BSP |
                       
                        bindings = <
    &kp Q    &kp W    &kp E     &kp R &kp T       &kp Y   &kp U   &kp I        &kp O      &kp P    
    HRML(A,  S,       D,        F)    &kp G       &kp H   HRMR(J, K,           L,         ESC)    
    &kp Z    &kp X    &kp C     &kp V &kp B       &kp N   &kp M   &kp DE_COMMA &kp DE_DOT &kp DE_QMARK 
                      &kp TAB   &mo 1 &kp SPACE   &kp RET &mo 2   &kp BSPC
                        >;
                };

                Home_Row_Adenvture_LOWER {
// -----------------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |    |    |  UNDO  | COPY  | PASTE  |  CUT  |  REDO  |
// |     |  4  |  5  |  6  |    |    |  PG UP |  <-   |  UP    |  DOWN |   ->   |
// |     |  7  |  8  |  9  |    |    |  PG DN |   Ö   |   Ü    |   Ä   |    ß   |
//             |     |     |    |    |  HOME  |  DEL  |  END   |

                        bindings = <
   &kp N0       &kp N1    &kp N2    &kp N3    &trans           &kp C_AC_UNDO  &kp C_AC_COPY       &kp C_AC_PASTE      &kp C_AC_CUT        &kp C_AC_REDO 
   &trans       &kp N4    &kp N5    &kp N6    &trans           &kp PG_UP      &kp LEFT            &kp DOWN            &kp UP              &kp RIGHT  
   &trans       &kp N7    &kp N8    &kp N9    &trans           &kp PG_DN      &kp DE_O_UMLAUT     &kp DE_U_UMLAUT     &kp DE_A_UMLAUT     &kp DE_SZ    
                          &trans   &trans     &trans           &kp HOME       &trans              &kp END
                        >;
                };

                Home_Row_Adenvture_RAISE {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |     |      |     |     |     |
// |     |     |     |     |     |   |     |      |     |     |     |
// |     |     |     |     |     |   |     |      |     |     |     |
//             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

                        bindings = <
   &kp DE_EXCL  &kp DE_DQT   &kp DE_SECT   &kp DLLR     &kp DE_PRCNT            &kp DE_AMPS   &kp DE_SLASH  &kp DE_LPAR &kp DE_RPAR   &kp DE_EQUAL 
   &kp DE_STAR  &kp DE_HASH  &kp DE_LT     &kp DE_GT    &kp DE_CARET            &kp DE_SQT    &kp DE_PLUS   &kp DE_LBKT &kp DE_RBKT   &kp DE_BSLH 
   &kp DE_TILDE &trans       &kp DE_GRAVE  &kp DE_ACUTE &kp DE_AT               &kp DE_UNDER  &kp DE_MINUS  &kp DE_LBRC &kp DE_RBRC   &kp DE_PIPE 
                             &kp TAB       &trans       &kp SPACE               &kp RET       &trans        &kp BSPC
                        >;
                };

                COMBO {
// -----------------------------------------------------------------------------------------
// |  F1  |  F2  |  F3  |  F4  | F5      |   |  F6   |   F7   |  F8   |  F9   |  F11   |
// |      |      |      |      | LAYERS  |   |       |        | CTRL  |  ALT  |  DEL   |
// |  BT0 |  BT1 | BT2  | BT3  | BT4     |   |       |        |       |       | BT CLR |
//               |      |      |         |   |       |        |       |

                        bindings = <
   &kp F1      &kp F2        &kp F3       &kp F4       &kp F5           &kp F6    &kp F7     &kp F8      &kp F9     &kp F11 
   &trans      &trans        &trans       &trans       &to Layers       &trans    &trans     &kp LCTRL   &kp LALT   &kp DEL   
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &trans    &trans     &trans      &trans     &bt BT_CLR 
                             &trans       &trans       &trans           &trans    &trans     &trans
                        >;
                };

                Layers {
                        bindings = <
   &trans      &trans        &trans      &trans       &trans           &trans     &trans     &trans      &trans     &trans 
   &to LOL     &to G0        &to G1      &to MR       &to CS           &to ER     &to SPZ    &trans      &trans     &trans
   &trans      &trans        &trans      &trans       &trans           &trans     &trans     &trans      &trans     &trans 
                             &trans      &trans       &trans           &trans     &to HRA    &trans
                        >;
                };

                Gaming_Numberless {
// -----------------------------------------------------------------------------------------
// |  TAB    |  Q  |  W  |  E  |  R  |   | ESC |     |     |     |     |
// |  SHFT   |  A  |  S  |  D  |  F  |   |     | ALT |     | TAB |     |
// |  CTRL   |  X  |  C  |  V  |  G  |   |     |     |     |     |     |
//                 |     | LWR | SPC |   |     | HRA |     |

                        bindings = <
    &kp TAB    &kp Q &kp W  &kp E    &kp R          &kp ESC   &trans     &trans  &trans    &trans 
    &kp LSHIFT &kp A &kp S  &kp D    &kp F          &trans    &kp RALT   &trans  &kp TAB   &trans 
    &kp LCTRL  &kp X &kp C  &kp V    &kp G          &trans    &trans     &trans  &trans    &trans 
                     &trans &mo G0_L &kp SPACE      &trans    &to HRA    &trans
                        >;
                };

                Gaming_Numberless_Lower {
// -----------------------------------------------------------------------------------------
// |  0  |  1  |  2  |  3  |  F3  |   |     |      |     |     |     |
// |     |  4  |  5  |  6  |  F11 |   |     |      |     |     |     |
// |     |  7  |  8  |  9  |      |   |     |      |     |     |     |
//             | GUI | LWR |  SPC |   |     |      |     |

                        bindings = <
   &kp N0   &kp N1    &kp N2   &kp N3    &kp F3        &trans   &trans   &trans  &trans   &trans 
   &trans   &kp N4    &kp N5   &kp N6    &kp F11       &trans   &trans   &trans  &trans   &trans 
   &trans   &kp N7    &kp N8   &kp N9    &trans        &trans   &trans   &trans  &trans   &trans 
                      &trans   &trans    &kp SPACE     &trans   &trans   &trans
                        >;
                };
               
                Gaming_Numberful {
// -----------------------------------------------------------------------------------------
// |  TAB    |  1  |  2  |  3  |  4  |   | ESC |     |     |     |     |
// |  SHFT   |  Q  |  W  |  E  |  R  |   |     | ALT |     | TAB |     |     
// |  CTRL   |  A  |  S  |  D  |  F  |   |     |     |     |     |     |
//                 |  X  |  C  | SPC |   |     | HRA |     |

                        bindings = <
    &kp TAB    &kp N1  &kp N2  &kp N3  &kp N4      &kp ESC &trans    &trans  &trans   &trans    
    &kp LSHIFT &kp Q   &kp W   &kp E   &kp R       &trans  &kp RALT  &trans  &kp TAB  &trans
    &kp LCTRL  &kp A   &kp S   &kp D   &kp F       &trans  &trans    &trans  &trans   &trans
                       &kp X   &kp C   &kp SPACE   &trans  &to HRA   &trans
                        >;
                };

                League_of_Legends {
                        bindings = <
    &kp TAB     &kp N1  &kp N2     &kp N3     &kp N4                 &kp ESC  &trans     &trans  &trans   &trans    
    &kp LSHFT   &kp Q   &kp W      &kp E      &kp R                  &trans   &kp RALT   &trans  &kp TAB  &trans 
    &kp LCTRL   &kp A   &kp S      &kp D      &kp F                  &trans   &trans     &trans  &trans   &trans 
                        &mo LOL_L  &kp B      &kp SPACE              &trans   &to HRA    &trans  
                        >;
                };
                 
                Lol_Lower {
                        bindings = <
   &trans      &kp F1      &kp F2       &kp F3       &kp F4             &kp ESC  &trans     &trans  &trans   &trans 
   &trans      &kp V       &trans       &trans       &trans             &trans   &kp RALT   &trans  &kp TAB  &trans 
   &trans      &trans      &trans       &trans       &trans             &trans   &trans     &trans  &trans   &trans 
                           &kp TAB      &trans       &trans             &trans   &to HRA    &trans  
                        >;
                };

                Counterstrike {
                        bindings = <
    &kp N1      &kp N2  &kp N3         &kp N4  &kp N5     &kp ESC &trans    &kp F1  &kp F2   &trans    
    &kp LSHFT   &kp Q   &kp W          &kp E   &kp R      &trans  &kp RALT  &trans  &kp TAB  &trans
    &kp LCTRL   &kp A   &kp S          &kp D   &kp G      &trans  &trans    &trans  &trans   &trans
                        &kp DE_CARET   &kp B  &kp TAB     &trans  &to HRA   &trans
                        >;
                };

                Elden_Ring {
                        bindings = <
    &kp ESC    &kp Q    &kp W  &kp E    &kp R       &kp ESC  &trans     &trans  &trans   &trans 
    &kp SPACE  &kp A    &kp S  &kp D    &kp LSHIFT  &trans   &kp RALT   &trans  &kp TAB  &trans 
    &kp RALT    &kp X   &kp G  &kp R    &kp TAB     &trans   &trans     &trans  &trans   &trans 
                        &trans &mo ER_L &kp F       &trans   &to HRA    &trans
                        >;
                };

               Elden_Ring_Lower {
                        bindings = <
   &trans   &trans    &kp UP    &trans      &trans         &trans   &trans   &trans  &trans   &trans 
   &trans   &kp LEFT  &kp DOWN  &kp RIGHT   &trans         &trans   &trans   &trans  &trans   &trans 
   &trans   &trans    &trans    &trans      &trans         &trans   &trans   &trans  &trans   &trans 
                      &trans    &trans      &kp SPACE      &trans   &trans   &trans
                        >;
                };


                MR {
                        bindings = <
    &kp TAB     &kp Q   &kp W   &kp E     &kp R           &kp ESC  &trans     &trans  &trans   &trans 
    &kp LSHIFT  &kp A   &kp S   &kp D     &kp F           &trans   &kp RALT   &trans  &kp TAB  &trans 
    &kp LCTRL   &kp X   &kp C   &kp Z     &kp V           &trans   &trans     &trans  &trans   &trans 
                        &kp G   &mo MR_L  &kp SPACE       &trans   &to HRA    &trans
                        >;
                };


                MR_Lower {
                        bindings = <
   &kp N1     &kp F1    &kp F5    &kp F6  &kp N5         &trans   &trans   &trans  &trans   &trans 
   &trans     &kp T     &kp K     &kp B   &kp H          &trans   &trans   &trans  &trans   &trans 
   &kp LCTRL  &trans    &trans    &trans  &trans         &trans   &trans   &trans  &trans   &trans 
                        &trans    &trans  &kp SPACE      &trans   &trans   &trans
                         >;
                };

                SUB {
                        bindings = <
    &kp N1     &kp N2  &kp N3  &kp N4      &kp N5      &kp ESC &trans    &trans  &trans   &trans    
    &kp TAB    &kp Q   &kp W   &kp E       &kp R       &trans  &kp RALT  &trans  &kp TAB  &trans
    &kp LSHIFT  &kp A  &kp S   &kp D       &kp F       &trans  &trans    &trans  &trans   &trans
                       &kp X   &mo SUB_L   &kp SPACE   &trans  &to HRA   &trans
                        >;
                };


                SPZ {
                        bindings = <
    &kp LSHFT    &kp Q   &kp M     &kp R &kp T          &kp ESC   &trans     &trans  &trans    &trans 
    &kp LCTRL    &kp A   &kp W     &kp E &kp C          &trans    &kp RALT   &trans  &kp TAB   &trans 
    &kp X        &kp A   &kp S     &kp D &kp  V         &trans    &trans     &trans  &trans    &trans 
                 &kp DEL &mo SPZ_L &kp SPACE            &trans    &to HRA    &trans
                        >;
                };

                SPZ_LOWER {
                        bindings = <
   &kp N0       &kp N1    &kp N2    &kp N3    &trans           &trans  &trans   &trans    &trans   &trans  
   &trans       &kp N4    &kp N5    &kp N6    &trans           &trans  &trans   &trans    &trans   &trans   
   &kp TAB      &kp N7    &kp N8    &kp N9    &kp B            &trans  &trans   &trans    &trans   &trans    
                          &kp TAB   &trans    &kp SPACE        &trans  &trans   &trans     
                        >;
                };
        };
};
